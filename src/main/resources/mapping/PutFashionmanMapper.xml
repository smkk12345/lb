<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.longbei.appservice.dao.PutFashionmanMapper" >
  <resultMap id="BaseResultMap" type="com.longbei.appservice.entity.PutFashionman" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="userid" property="userid" jdbcType="BIGINT" />
    <result column="isfashionman" property="isfashionman" jdbcType="CHAR" />
    <result column="rankid" property="rankid" jdbcType="BIGINT" />
    <result column="createtime" property="createtime" jdbcType="TIMESTAMP" />
    <result column="updatetime" property="updatetime" jdbcType="TIMESTAMP" />
    <result column="sort" property="sort" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, userid, isfashionman, rankid, createtime, updatetime, sort
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from put_fashionman
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from put_fashionman
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.longbei.appservice.entity.PutFashionman" >
    insert into put_fashionman (id, userid, isfashionman, 
      rankid, createtime, updatetime, 
      sort)
    values (#{id,jdbcType=INTEGER}, #{userid,jdbcType=BIGINT}, #{isfashionman,jdbcType=CHAR}, 
      #{rankid,jdbcType=BIGINT}, #{createtime,jdbcType=TIMESTAMP}, #{updatetime,jdbcType=TIMESTAMP}, 
      #{sort,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.longbei.appservice.entity.PutFashionman" >
    insert into put_fashionman
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="userid != null" >
        userid,
      </if>
      <if test="isfashionman != null" >
        isfashionman,
      </if>
      <if test="rankid != null" >
        rankid,
      </if>
      <if test="createtime != null" >
        createtime,
      </if>
      <if test="updatetime != null" >
        updatetime,
      </if>
      <if test="sort != null" >
        sort,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="userid != null" >
        #{userid,jdbcType=BIGINT},
      </if>
      <if test="isfashionman != null" >
        #{isfashionman,jdbcType=CHAR},
      </if>
      <if test="rankid != null" >
        #{rankid,jdbcType=BIGINT},
      </if>
      <if test="createtime != null" >
        #{createtime,jdbcType=TIMESTAMP},
      </if>
      <if test="updatetime != null" >
        #{updatetime,jdbcType=TIMESTAMP},
      </if>
      <if test="sort != null" >
        #{sort,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.longbei.appservice.entity.PutFashionman" >
    update put_fashionman
    <set >
      <if test="userid != null" >
        userid = #{userid,jdbcType=BIGINT},
      </if>
      <if test="isfashionman != null" >
        isfashionman = #{isfashionman,jdbcType=CHAR},
      </if>
      <if test="rankid != null" >
        rankid = #{rankid,jdbcType=BIGINT},
      </if>
      <if test="createtime != null" >
        createtime = #{createtime,jdbcType=TIMESTAMP},
      </if>
      <if test="updatetime != null" >
        updatetime = #{updatetime,jdbcType=TIMESTAMP},
      </if>
      <if test="sort != null" >
        sort = #{sort,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.longbei.appservice.entity.PutFashionman" >
    update put_fashionman
    set userid = #{userid,jdbcType=BIGINT},
      isfashionman = #{isfashionman,jdbcType=CHAR},
      rankid = #{rankid,jdbcType=BIGINT},
      createtime = #{createtime,jdbcType=TIMESTAMP},
      updatetime = #{updatetime,jdbcType=TIMESTAMP},
      sort = #{sort,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>