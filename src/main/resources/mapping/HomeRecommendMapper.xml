<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.longbei.appservice.dao.HomeRecommendMapper" >
  <resultMap id="BaseResultMap" type="com.longbei.appservice.entity.HomeRecommend" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="recommendtype" property="recommendtype" jdbcType="INTEGER" />
    <result column="businessid" property="businessid" jdbcType="BIGINT" />
    <result column="sort" property="sort" jdbcType="INTEGER" />
    <result column="createtime" property="createtime" jdbcType="TIMESTAMP" />
    <result column="createuserid" property="createuserid" jdbcType="VARCHAR" />
    <result column="isdel" property="isdel" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, recommendtype, businessid, sort, createtime, createuserid,isdel
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from homerecommend
    where id = #{id,jdbcType=INTEGER}
  </select>


  <select id="selectCount" parameterType="com.longbei.appservice.entity.HomeRecommend" resultType="java.lang.Integer">
    SELECT count(1) FROM homerecommend
    <where>
      isdel = '0'
      <if test="recommendtype != null and recommendtype!='-1'.toString()">
        AND recommendtype = #{recommendtype}
      </if>
    </where>
  </select>


  <select id="selectList" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from homerecommend
    <where>
      isdel = '0'
      <if test="homeRecommend.recommendtype != null and homeRecommend.recommendtype!='-1'.toString()">
        AND recommendtype = #{homeRecommend.recommendtype}
      </if>
    </where>
    ORDER BY sort DESC ,createtime DESC
    <if test="startno != null">
      limit #{startno},#{pagesize}
    </if>
  </select>




  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from homerecommend
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.longbei.appservice.entity.HomeRecommend" >
    insert into homerecommend (id, recommendtype, businessid, 
      sort, createtime,
      createuserid)
    values (#{id,jdbcType=INTEGER}, #{recommendtype,jdbcType=INTEGER}, #{businessid,jdbcType=BIGINT}, 
      #{sort,jdbcType=INTEGER}, #{createtime,jdbcType=TIMESTAMP},
      #{createuserid,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.longbei.appservice.entity.HomeRecommend" >
    insert into homerecommend
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="recommendtype != null" >
        recommendtype,
      </if>
      <if test="businessid != null" >
        businessid,
      </if>
      <if test="sort != null" >
        sort,
      </if>
      <if test="createtime != null" >
        createtime,
      </if>
      <if test="createuserid != null" >
        createuserid,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="recommendtype != null" >
        #{recommendtype,jdbcType=INTEGER},
      </if>
      <if test="businessid != null" >
        #{businessid,jdbcType=BIGINT},
      </if>
      <if test="sort != null" >
        #{sort,jdbcType=INTEGER},
      </if>
      <if test="newTablecol != null" >
        #{newTablecol,jdbcType=VARCHAR},
      </if>
      <if test="createtime != null" >
        #{createtime,jdbcType=TIMESTAMP},
      </if>
      <if test="createuserid != null" >
        #{createuserid,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>


  <insert id="insertBantch" parameterType="com.longbei.appservice.entity.HomeRecommend">
    INSERT into homerecommend
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="recommendtype != null" >
        recommendtype,
      </if>
      <if test="businessid != null" >
        businessid,
      </if>
      <if test="sort != null" >
        sort,
      </if>
      <if test="createtime != null" >
        createtime,
      </if>
      <if test="createuserid != null" >
        createuserid,
      </if>
    </trim>
    VALUES
    <foreach collection="businessids" item="b" separator=",">
      <trim prefix="(" suffix=")" suffixOverrides="," >
        <if test="recommendtype != null" >
          #{recommendtype,jdbcType=INTEGER},
        </if>
        <if test="b != null" >
          #{b,jdbcType=BIGINT},
        </if>
        <if test="sort != null" >
          #{sort,jdbcType=INTEGER},
        </if>
        <if test="newTablecol != null" >
          #{newTablecol,jdbcType=VARCHAR},
        </if>
        <if test="createtime != null" >
          #{createtime,jdbcType=TIMESTAMP},
        </if>
        <if test="createuserid != null" >
          #{createuserid,jdbcType=VARCHAR},
        </if>
      </trim>
    </foreach>
  </insert>




  <update id="updateByPrimaryKeySelective" parameterType="com.longbei.appservice.entity.HomeRecommend" >
    update homerecommend
    <set >
      <if test="recommendtype != null" >
        recommendtype = #{recommendtype,jdbcType=INTEGER},
      </if>
      <if test="businessid != null" >
        businessid = #{businessid,jdbcType=BIGINT},
      </if>
      <if test="sort != null" >
        sort = #{sort,jdbcType=INTEGER},
      </if>
      <if test="createtime != null" >
        createtime = #{createtime,jdbcType=TIMESTAMP},
      </if>
      <if test="createuserid != null" >
        createuserid = #{createuserid,jdbcType=VARCHAR},
      </if>
      <if test="isdel != null" >
        isdel = #{isdel,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.longbei.appservice.entity.HomeRecommend" >
    update homerecommend
    set recommendtype = #{recommendtype,jdbcType=INTEGER},
      businessid = #{businessid,jdbcType=BIGINT},
      sort = #{sort,jdbcType=INTEGER},
      createtime = #{createtime,jdbcType=TIMESTAMP},
      createuserid = #{createuserid,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>