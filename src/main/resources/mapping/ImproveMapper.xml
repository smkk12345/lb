<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.longbei.appservice.dao.ImproveMapper" >
  <resultMap id="BaseResultMap" type="com.longbei.appservice.entity.Improve" >
    <id column="id" property="id" jdbcType="BIGINT" />
    <result column="impid" property="impid" jdbcType="BIGINT" />
    <result column="itype" property="itype" jdbcType="CHAR" />
    <result column="brief" property="brief" jdbcType="VARCHAR" />
    <result column="pickey" property="pickey" jdbcType="VARCHAR" />
    <result column="filekey" property="filekey" jdbcType="VARCHAR" />
    <result column="userid" property="userid" jdbcType="BIGINT" />
    <result column="businessid" property="businessid" jdbcType="BIGINT" />
    <result column="businesstype" property="businesstype" jdbcType="CHAR" />
    <result column="likes" property="likes" jdbcType="INTEGER" />
    <result column="flowers" property="flowers" jdbcType="INTEGER" />
    <result column="diamonds" property="diamonds" jdbcType="INTEGER" />
    <result column="complaincount" property="complaincount" jdbcType="INTEGER" />
    <result column="createtime" property="createtime" jdbcType="TIMESTAMP" />
    <result column="updatetime" property="updatetime" jdbcType="TIMESTAMP" />
    <result column="indexnum" property="indexnum" jdbcType="INTEGER" />
    <result column="isdel" property="isdel" jdbcType="CHAR" />
    <result column="ismainimp" property="ismainimp" jdbcType="CHAR" />
    <result column="ptype" property="ptype" jdbcType="CHAR" />
    <result column="ispublic" property="ispublic" jdbcType="CHAR" />
    <result column="sourcekey" property="sourcekey" jdbcType="VARCHAR" />
    <result column="pimpid" property="pimpid" />
    <result column="isresponded" property="isresponded" />
    <result column="totallikes" property="totallikes" jdbcType="INTEGER" />
    <result column="totalflowers" property="totalflowers" jdbcType="INTEGER" />
    <result column="sortnum" property="sortnum" jdbcType="INTEGER" />
    <result column="isrecommend" property="isrecommend" jdbcType="VARCHAR" />
    <result column="picattribute" property="picattribute" jdbcType="VARCHAR" />
    <result column="duration" property="duration"/>
  </resultMap>

  <sql id="Base_Column_List" >
    impid, itype, brief, pickey, filekey, userid, businessid, businesstype, likes,isrecommend,
    flowers, diamonds, createtime, updatetime, indexnum, isdel, ismainimp, ptype,
    ispublic,sourcekey,complaincount,duration,isbusinessdel,picattribute
  </sql>

  <select id="selectByPrimaryKey" resultMap="BaseResultMap"  >
    select
    <include refid="Base_Column_List" />
    from ${tablename}
    <where>
      <if test="businessid != null">
        AND businessid= #{businessid}
      </if>
      and impid = #{impid,jdbcType=BIGINT}
      <if test="isdel != null" >
        and isdel = #{isdel,jdbcType=CHAR}
      </if>
      <if test="ispublic != null">
        and ispublic = #{ispublic,jdbcType=CHAR}
      </if>
    </where>



  </select>

  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from improve
    where impid = #{impid,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="com.longbei.appservice.entity.Improve" >
    insert into improve (id, impid, itype, 
      brief, pickey, filekey, 
      userid, businessid, businesstype, 
      likes, flowers, diamonds, 
      createtime, updatetime, indexnum, 
      isdel, ismainimp, ptype, ispublic,sourcekey
      )
    values (#{id,jdbcType=BIGINT}, #{impid,jdbcType=BIGINT}, #{itype,jdbcType=CHAR}, 
      #{brief,jdbcType=VARCHAR}, #{pickey,jdbcType=VARCHAR}, #{filekey,jdbcType=VARCHAR}, 
      #{userid,jdbcType=BIGINT}, #{businessid,jdbcType=BIGINT}, #{businesstype,jdbcType=CHAR}, 
      #{likes,jdbcType=INTEGER}, #{flowers,jdbcType=INTEGER}, #{diamonds,jdbcType=INTEGER}, 
      #{createtime,jdbcType=TIMESTAMP}, #{updatetime,jdbcType=TIMESTAMP}, #{indexnum,jdbcType=INTEGER}, 
      #{isdel,jdbcType=CHAR}, #{ismainimp,jdbcType=CHAR}, #{ptype,jdbcType=CHAR}, #{ispublic,jdbcType=CHAR}
      , #{sourcekey,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective"  >
    insert into ${tablename}
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="improve.id != null" >
        id,
      </if>
      <if test="improve.impid != null" >
        impid,
      </if>
      <if test="improve.itype != null" >
        itype,
      </if>
      <if test="improve.brief != null" >
        brief,
      </if>
      <if test="improve.pickey != null" >
        pickey,
      </if>
      <if test="improve.filekey != null" >
        filekey,
      </if>
      <if test="improve.userid != null" >
        userid,
      </if>
      <if test="improve.businessid != null" >
        businessid,
      </if>
      <if test="improve.businesstype != null" >
        businesstype,
      </if>
      <if test="improve.likes != null" >
        likes,
      </if>
      <if test="improve.flowers != null" >
        flowers,
      </if>
      <if test="improve.diamonds != null" >
        diamonds,
      </if>
      <if test="improve.createtime != null" >
        createtime,
      </if>
      <if test="improve.updatetime != null" >
        updatetime,
      </if>
      <if test="improve.indexnum != null" >
        indexnum,
      </if>
      <if test="improve.isdel != null" >
        isdel,
      </if>
      <if test="improve.ismainimp != null" >
        ismainimp,
      </if>
      <if test="improve.ptype != null" >
        ptype,
      </if>
      <if test="improve.ispublic != null" >
        ispublic,
      </if>
      <if test="improve.sourcekey != null" >
        sourcekey,
      </if>
      <if test="improve.rankid != null" >
        rankid,
      </if>
      <if test="improve.duration != null" >
        duration,
      </if>
      <if test="improve.picattribute != null" >
        picattribute,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="improve.id != null" >
        #{improve.id,jdbcType=BIGINT},
      </if>
      <if test="improve.impid != null" >
        #{improve.impid,jdbcType=BIGINT},
      </if>
      <if test="improve.itype != null" >
        #{improve.itype,jdbcType=CHAR},
      </if>
      <if test="improve.brief != null" >
        #{improve.brief,jdbcType=VARCHAR},
      </if>
      <if test="improve.pickey != null" >
        #{improve.pickey,jdbcType=VARCHAR},
      </if>
      <if test="improve.filekey != null" >
        #{improve.filekey,jdbcType=VARCHAR},
      </if>
      <if test="improve.userid != null" >
        #{improve.userid,jdbcType=BIGINT},
      </if>
      <if test="improve.businessid != null" >
        #{improve.businessid,jdbcType=BIGINT},
      </if>
      <if test="improve.businesstype != null" >
        #{improve.businesstype,jdbcType=CHAR},
      </if>
      <if test="improve.likes != null" >
        #{improve.likes,jdbcType=INTEGER},
      </if>
      <if test="improve.flowers != null" >
        #{improve.flowers,jdbcType=INTEGER},
      </if>
      <if test="improve.diamonds != null" >
        #{improve.diamonds,jdbcType=INTEGER},
      </if>
      <if test="improve.createtime != null" >
        #{improve.createtime,jdbcType=TIMESTAMP},
      </if>
      <if test="improve.updatetime != null" >
        #{improve.updatetime,jdbcType=TIMESTAMP},
      </if>
      <if test="improve.indexnum != null" >
        #{improve.indexnum,jdbcType=INTEGER},
      </if>
      <if test="improve.isdel != null" >
        #{improve.isdel,jdbcType=CHAR},
      </if>
      <if test="improve.ismainimp != null" >
        #{improve.ismainimp,jdbcType=CHAR},
      </if>
      <if test="improve.ptype != null" >
        #{improve.ptype,jdbcType=CHAR},
      </if>
      <if test="improve.ispublic != null" >
        #{improve.ispublic,jdbcType=CHAR},
      </if>
      <if test="improve.sourcekey != null" >
        #{improve.sourcekey,jdbcType=VARCHAR},
      </if>
      <if test="improve.rankid != null" >
        #{improve.rankid,jdbcType=BIGINT},
      </if>
      <if test="improve.duration != null" >
        #{improve.duration},
      </if>
      <if test="improve.picattribute != null" >
        #{improve.picattribute,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.longbei.appservice.entity.Improve" >
    update improve
    <set >
      <if test="impid != null" >
        impid = #{impid,jdbcType=BIGINT},
      </if>
      <if test="itype != null" >
        itype = #{itype,jdbcType=CHAR},
      </if>
      <if test="brief != null" >
        brief = #{brief,jdbcType=VARCHAR},
      </if>
      <if test="pickey != null" >
        pickey = #{pickey,jdbcType=VARCHAR},
      </if>
      <if test="filekey != null" >
        filekey = #{filekey,jdbcType=VARCHAR},
      </if>
      <if test="userid != null" >
        userid = #{userid,jdbcType=BIGINT},
      </if>
      <if test="businessid != null" >
        businessid = #{businessid,jdbcType=BIGINT},
      </if>
      <if test="businesstype != null" >
        businesstype = #{businesstype,jdbcType=CHAR},
      </if>
      <if test="likes != null" >
        likes = #{likes,jdbcType=INTEGER},
      </if>
      <if test="flowers != null" >
        flowers = #{flowers,jdbcType=INTEGER},
      </if>
      <if test="diamonds != null" >
        diamonds = #{diamonds,jdbcType=INTEGER},
      </if>
      <if test="createtime != null" >
        createtime = #{createtime,jdbcType=TIMESTAMP},
      </if>
      <if test="updatetime != null" >
        updatetime = #{updatetime,jdbcType=TIMESTAMP},
      </if>
      <if test="indexnum != null" >
        indexnum = #{indexnum,jdbcType=INTEGER},
      </if>
      <if test="isdel != null" >
        isdel = #{isdel,jdbcType=CHAR},
      </if>
      <if test="ismainimp != null" >
        ismainimp = #{ismainimp,jdbcType=CHAR},
      </if>
      <if test="ptype != null" >
        ptype = #{ptype,jdbcType=CHAR},
      </if>
      <if test="ispublic != null" >
        ispublic = #{ispublic,jdbcType=CHAR},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.longbei.appservice.entity.Improve" >
    update improve
    set impid = #{impid,jdbcType=BIGINT},
      itype = #{itype,jdbcType=CHAR},
      brief = #{brief,jdbcType=VARCHAR},
      pickey = #{pickey,jdbcType=VARCHAR},
      filekey = #{filekey,jdbcType=VARCHAR},
      userid = #{userid,jdbcType=BIGINT},
      businessid = #{businessid,jdbcType=BIGINT},
      businesstype = #{businesstype,jdbcType=CHAR},
      likes = #{likes,jdbcType=INTEGER},
      flowers = #{flowers,jdbcType=INTEGER},
      diamonds = #{diamonds,jdbcType=INTEGER},
      createtime = #{createtime,jdbcType=TIMESTAMP},
      updatetime = #{updatetime,jdbcType=TIMESTAMP},
      indexnum = #{indexnum,jdbcType=INTEGER},
      isdel = #{isdel,jdbcType=CHAR},
      ismainimp = #{ismainimp,jdbcType=CHAR},
      ptype = #{ptype,jdbcType=CHAR},
      ispublic = #{ispublic,jdbcType=CHAR}
    where id = #{id,jdbcType=BIGINT}
  </update>


  <update id="remove" parameterType="String">
    UPDATE improve SET isdel = '1' WHERE impid=#{improveid} AND userid=#{userid}
  </update>


  <update id="updateLikes">
    UPDATE ${tablename} SET
    <if test="opttype == 0">
      likes = likes + 1
    </if>
    <if test="opttype == 1">
      likes = likes - 1
    </if>
    WHERE
    <if test="businessid != null ">
      businessid = #{businessid} AND
    </if>
     impid=#{impid}
  </update>


  <update id="updateFlower">
    UPDATE ${tablename}
    SET flowers = flowers + #{flowernum}
    WHERE
    <if test="businessid != null ">
      businessid = #{businessid} AND
    </if>
    impid = #{impid}
  </update>

  <update id="updateDiamond">
    UPDATE ${tablename}
    SET diamonds = diamonds + #{diamondnum}
    WHERE
    <if test="businessid != null ">
      businessid = #{businessid} AND
    </if>
    AND  impid = #{impid}
  </update>

  <update id="updateMedia">
    UPDATE ${tablename}
    SET
    <if test="pickey != null" >
    pickey = #{pickey},
    </if>
    <if test="duration != null">
      duration =  #{duration},
    </if>
    <if test="picattribute != null">
      picattribute =  #{picattribute},
    </if>
    <if test="filekey!= null" >
      filekey = #{filekey}
    </if>
    WHERE
      sourcekey = #{key}
      <if test="businessid != null" >
        AND
        businessid = #{businessid}
      </if>
  </update>
  <update id="updateImpComplaincount">
    UPDATE ${tablename} SET
    complaincount = complaincount +1
    WHERE impid=#{impid}
  </update>
  <sql id="Classroom_List" >
    id, impid, itype, brief, pickey, filekey, userid, businessid, businesstype, likes, 
    flowers, diamonds, createtime, updatetime, indexnum, isdel, ismainimp, ptype, ispublic,sourcekey, 
    pimpid, isresponded
  </sql>

  <select id="selectListByBusinessid" resultMap="BaseResultMap" >
    select
    <if test="tablename == 'improve_classroom'" >
    	<include refid="Classroom_List" /> 
    </if>
    <if test="tablename != 'improve_classroom'" >
    	<include refid="Base_Column_List" /> 
    </if>
    from ${tablename}
    <where>
      <if test="iscomplain != null and iscomplain != ''">
        <choose>
          <when test="iscomplain == '1'.toString()">
            and complaincount > 0
          </when>
          <otherwise>
            and complaincount = 0
          </otherwise>
        </choose>
      </if>
      and businessid = #{businessid}
      and isdel = '0'
      and isbusinessdel = '0'
      <if test="ismainimp != null" >
        and ismainimp = #{ismainimp}
      </if>
      <if test="tablename == 'improve_classroom'" >
        AND isresponded = 0
      </if>
      <if test="userid != null" >
        AND userid = #{userid}
      </if>
    </where>
    <if test="orderby == null or orderby ==0">
        ORDER BY createtime DESC
      </if>
      <if test="orderby != null and orderby == 1">
        ORDER BY flowers*10+likes desc
      </if>
    limit #{startno},#{pagesize}
  </select>

  <select id="selectListTotalcount" resultType="java.lang.Integer" >
    select count(*)
    from ${tablename}
    <where>
      <if test="ismainimp != null" >
        ismainimp = #{ismainimp}
      </if>
      <if test="tablename == 'improve_classroom'" >
        AND isresponded = 0
      </if>
      <if test="userid != null" >
        AND userid = #{userid}
      </if>
      <if test="iscomplain != null and iscomplain != ''">
        <choose>
          <when test="iscomplain == '1'.toString()">
            and complaincount > 0
          </when>
          <otherwise>
            and complaincount = 0
          </otherwise>
        </choose>
      </if>
      and isdel = '0' and isbusinessdel = '0'
      and businessid = #{businessid}
    </where>
  </select>

  <select id="selectListByRank" resultMap="BaseResultMap">
    SELECT
    ir.id, ir.impid, ir.itype, ir.brief, ir.pickey, ir.filekey, ir.userid,ir.duration,
    ir.businessid, ir.businesstype, ir.likes,rm.likes as totallikes,rm.flowers as totalflowers,
    ir.flowers, ir.diamonds, ir.createtime, ir.updatetime, ir.indexnum, ir.isdel, ismainimp, ir.ptype,
    ir.ispublic,ir.sourcekey,ir.complaincount,ir.picattribute,rm.sortnum
    FROM improve_rank ir
      JOIN rank_members rm
        ON ir.businessid=rm.rankid
          and rm.userid = ir.userid
    <where>
      rm.status = '1' AND ir.isbusinessdel='0'
      and ir.isdel = 0
      AND ir.businessid = #{businessid}
      <if test="lastdate != null">
        AND ir.createtime &lt; #{lastdate}
      </if>
      <if test="orderby=='0'.toString()" >
        AND ismainimp = '1'
--         group by ir.userid
      </if>
    </where>
    <if test="orderby=='2'.toString() or orderby=='0'.toString()">
      ORDER BY ir.createtime DESC
    </if>
    <if test="orderby=='1'.toString()">
      ORDER BY ir.flowers*#{flowerscore}+ir.likes*#{likescore} desc
    </if>
    <choose>
      <when test="orderby=='0'.toString() or lastdate != null">
        limit #{pagesize}
      </when>
      <otherwise>
        limit #{startno},#{pagesize}
      </otherwise>
    </choose>

  </select>


  <select id="selectGoalImproveCount" resultType="java.lang.Integer">
    SELECT
    count(*)
    FROM improve_goal ig
    JOIN  user_goal ug ON  ig.businessid=ug.goalid
    WHERE ug.ispublic='2' AND ug.isdel = '0' AND ig.isrecommend='0'
    <if test="startdate != null">
      AND ig.createtime &gt;= #{startdate}
    </if>
    <if test="brief != null">
      AND ig.brief LIKE concat(concat('%',#{brief}),'%')
    </if>
    <if test="users != null and users.size() > 0">
      AND ig.userid IN
      <foreach item="item" index="index" collection="users" open="(" separator="," close=")">
        #{item.id}
      </foreach>
    </if>
  </select>

  <select id="selectGoalImproveList" resultMap="BaseResultMap">
    SELECT
    ig.id, ig.impid, ig.itype, ig.brief, ig.pickey, ig.filekey, ig.userid,ig.duration,
    ig.businessid, ig.businesstype, ig.likes,
    ig.flowers, ig.diamonds, ig.createtime, ig.updatetime, ig.indexnum, ig.isdel, ig.ptype,
    ig.ispublic,ig.sourcekey,ig.complaincount
    FROM improve_goal ig
    JOIN  user_goal ug ON  ig.businessid=ug.goalid
    WHERE ug.ispublic='2' AND ug.isdel = '0' AND ig.isrecommend='0'
    <if test="startdate != null">
      AND ig.createtime &gt;= #{startdate}
    </if>
    <if test="brief != null">
      AND ig.brief LIKE concat(concat('%',#{brief}),'%')
    </if>
    <if test="users != null and users.size() > 0">
      AND ig.userid IN
      <foreach item="item" index="index" collection="users" open="(" separator="," close=")">
        #{item.id}
      </foreach>
    </if>
    <if test="order == null || order == '0'.toString()">
      ORDER  BY  ig.createtime DESC
    </if>
    <if test="order == '1'.toString()">
      ORDER BY ig.likes DESC ,ig.createtime DESC
    </if>
    <if test="order == '2'.toString()">
      ORDER BY ig.flowers DESC ,ig.createtime DESC
    </if>
    limit #{startno},#{pagesize}
  </select>


  <select id="selectRankImproveCount" resultType="java.lang.Integer">
    SELECT
    count(*)
    FROM improve_rank ir
    LEFT JOIN rank_members rm ON  ir.businessid=rm.rankid AND ir.userid=rm.userid
    WHERE rm.status = '1' AND ir.isbusinessdel = '0' AND ir.isrecommend='0'
    <if test="startdate != null">
      AND ir.createtime &gt;= #{startdate}
    </if>
    <if test="brief != null">
      AND ir.brief LIKE concat(concat('%',#{brief}),'%')
    </if>
    <if test="users != null and users.size() > 0">
      AND ir.userid IN
      <foreach item="item" index="index" collection="users" open="(" separator="," close=")">
        #{item.id}
      </foreach>
    </if>
  </select>

  <select id="selectRankImproveList" resultMap="BaseResultMap">
    SELECT
    ir.id, ir.impid, ir.itype, ir.brief, ir.pickey, ir.filekey, ir.userid,ir.duration,
    ir.businessid, ir.businesstype, ir.likes,rm.likes as totallikes,rm.flowers as totalflowers,
    ir.flowers, ir.diamonds, ir.createtime, ir.updatetime, ir.indexnum, ir.isdel, ismainimp, ir.ptype,
    ir.ispublic,ir.sourcekey,ir.complaincount,rm.sortnum
    FROM improve_rank ir
    LEFT JOIN rank_members rm ON  ir.businessid=rm.rankid  and ir.userid=rm.userid
    WHERE rm.status = '1' AND ir.isbusinessdel = '0' AND ir.isrecommend='0'
    <if test="startdate != null">
      AND ir.createtime &gt;= #{startdate}
    </if>
    <if test="brief != null">
      AND ir.brief LIKE concat(concat('%',#{brief}),'%')
    </if>
    <if test="users != null and users.size() > 0">
      AND ir.userid IN
      <foreach item="item" index="index" collection="users" open="(" separator="," close=")">
        #{item.id}
      </foreach>
    </if>
    <if test="order == null || order == '0'.toString()">
      ORDER  BY  ir.createtime DESC
    </if>
    <if test="order == '1'.toString()">
      ORDER BY ir.likes DESC ,ir.createtime DESC
    </if>

    <if test="order == '2'.toString()">
      ORDER BY ir.flowers DESC ,ir.createtime DESC
    </if>
    limit #{startno},#{pagesize}
  </select>


  <select id="selectRankImprovesByUserIdAndRankId" resultMap="BaseResultMap">
    SELECT
      ir.impid, ir.itype, ir.brief, ir.pickey, ir.filekey, ir.userid, ir.businessid,
      ir.businesstype, ir.likes,ir.isrecommend,
    ir.flowers, ir.diamonds, ir.createtime, ir.updatetime, ir.indexnum, ir.isdel, ir.ismainimp,ir.ptype,
    ir.ispublic,ir.sourcekey,ir.complaincount,ir.duration,ir.isbusinessdel,ir.picattribute
    FROM
     improve_rank ir
    WHERE
        ir.businessid = #{businessid}
     AND ir.userid = #{userid}
         AND ir.ismainimp='1'
     limit 1
  </select>

  <select id="selectRankImprovesBySort" resultMap="BaseResultMap">
    SELECT
      ir.impid, ir.itype, ir.brief, ir.pickey, ir.filekey, ir.userid, ir.businessid,
      ir.businesstype, ir.likes,ir.isrecommend,
    ir.flowers, ir.diamonds, ir.createtime, ir.updatetime, ir.indexnum, ir.isdel, ir.ismainimp,ir.ptype,
    ir.ispublic,ir.sourcekey,ir.complaincount,ir.duration,ir.isbusinessdel,ir.picattribute,
    rm.likes as totallikes,rm.flowers as totalflowers,rm.sortnum
    FROM
    rank_members rm JOIN improve_rank ir
    ON rm.rankid = ir.businessid AND rm.userid=ir.userid AND ir.ismainimp='1'
    WHERE
    rm.rankid = #{rankid}
    ORDER BY
    rm.sortnum ASC
    limit #{startno},#{pagesize}
  </select>

  <select id="selectImproveCount" resultType="java.lang.Integer">
    SELECT
    count(*)
    FROM
    improve
    WHERE ispublic = '2' AND isdel = '0' AND isrecommend='0'
    <if test="startdate != null">
      AND createtime &gt;= #{startdate}
    </if>
    <if test="brief != null">
      AND brief LIKE concat(concat('%',#{brief}),'%')
    </if>
    <if test="users != null and users.size() > 0">
      AND userid IN
      <foreach item="item" index="index" collection="users" open="(" separator="," close=")">
        #{item.id}
      </foreach>
    </if>
  </select>

  <select id="selectImproveList" resultMap="BaseResultMap">
    SELECT
    <include refid="Base_Column_List" />
    FROM
    improve
    WHERE ispublic = '2' AND isdel = '0' AND isrecommend='0'
    <if test="startdate != null">
      AND createtime &gt;= #{startdate}
    </if>
    <if test="brief != null">
      AND brief LIKE concat(concat('%',#{brief}),'%')
    </if>
    <if test="users != null and users.size() > 0">
      AND userid IN
      <foreach item="item" index="index" collection="users" open="(" separator="," close=")">
        #{item.id}
      </foreach>
    </if>
    <if test="order == null || order == '0'.toString()">
      ORDER  BY createtime DESC
    </if>
    <if test="order == '1'.toString()">
      ORDER BY likes DESC ,createtime DESC
    </if>
    <if test="order == '2'.toString()">
      ORDER BY flowers DESC ,createtime DESC
    </if>
    limit #{startno},#{pagesize}
  </select>


  
  <select id="selectImproveGoal" resultMap="goalMap" >
    select
    <include refid="Base_Column_List" />
    from improve_goal 
    where 
     goalid = #{goalid} 
      AND ismainimp = 1
  </select>

  <resultMap id="goalMap" type="com.longbei.appservice.entity.Improve" >
    <id column="id" property="id" jdbcType="BIGINT" />
    <result column="impid" property="impid" jdbcType="BIGINT" />
    <result column="itype" property="itype" jdbcType="CHAR" />
    <result column="brief" property="brief" jdbcType="VARCHAR" />
    <result column="pickey" property="pickey" jdbcType="VARCHAR" />
    <result column="filekey" property="filekey" jdbcType="VARCHAR" />
    <result column="userid" property="userid" jdbcType="BIGINT" />
    <result column="businessid" property="businessid" jdbcType="BIGINT" />
    <result column="businesstype" property="businesstype" jdbcType="CHAR" />
    <result column="likes" property="likes" jdbcType="INTEGER" />
    <result column="flowers" property="flowers" jdbcType="INTEGER" />
    <result column="diamonds" property="diamonds" jdbcType="INTEGER" />
    <result column="complaincount" property="complaincount" jdbcType="INTEGER" />
    <result column="createtime" property="createtime" jdbcType="TIMESTAMP" />
    <result column="updatetime" property="updatetime" jdbcType="TIMESTAMP" />
    <result column="indexnum" property="indexnum" jdbcType="INTEGER" />
    <result column="isdel" property="isdel" jdbcType="CHAR" />
    <result column="ismainimp" property="ismainimp" jdbcType="CHAR" />
    <result column="ptype" property="ptype" jdbcType="CHAR" />
    <result column="ispublic" property="ispublic" jdbcType="CHAR" />
    <result column="goalid" property="goalid" />
    <result column="duration" property="duration" />
  </resultMap>

  <select id="selectGoalMainImproveList" resultMap="goalMap" >
    SELECT
    <include refid="Base_Column_List"/>
    FROM improve_goal
    where userid=#{userid} and ismainimp = '1' and isdel = '0'
    ORDER BY createtime DESC
    <if test="endNum > 0">
      limit #{startNum},#{endNum}
    </if>
  </select>

  <update id="delGoalToImprove">
    UPDATE improve_goal
    set isdel = '1'
    where userid=#{userid}
    and businessid=#{businessid}
    and businesstype=#{businesstype}
  </update>

  <update id="updateGolaMainImprove">
    UPDATE improve_goal
    set ismainimp = '0'
    where ismainimp = '1'
    and userid=#{userid}
    and businessid=#{businessid}
  </update>
  
  <update id="updateRankMainImprove">
    UPDATE improve_rank
    set ismainimp = '0'
    where ismainimp = '1'
    and userid=#{userid}
    and businessid=#{businessid}
  </update>

  <update id="chooseMainImprove">
    UPDATE ${tablename} set ismainimp='1'
    where ${field}=#{businessid}
    and userid=#{userid}
    AND isdel='0'
    order by updatetime desc limit 1
  </update>

  <update id="afterDelSubImp">
    UPDATE ${tablename}
    set likes=likes-#{like},
        flowers=flowers-#{flower},
        icount = icount-1
    where ${field}=#{businessid}
    and userid=#{userid}
  </update>

  <update id="updateSourceData">
    update ${tablename}
    SET
        <if test="operatetype == '0'.toString()">
        likes = likes + #{icount}
        </if>
        <if test="operatetype == '1'.toString()">
          flowers = flowers + #{icount}
        </if>
    where ${field}=#{businessid}
    and userid=#{userid}
  </update>


  <update id="updateImproveRecommend" >
    UPDATE ${tablename}
    SET isrecommend=#{isrecommend}
    WHERE impid in
    <foreach item="item" index="index" collection="impids" open="(" separator="," close=")">
      #{item}
    </foreach>
  </update>



  <update id="removeImproveFromBusiness" >
    UPDATE ${tablename}
    SET isbusinessdel = '1'
    WHERE businessid=#{businessid} and impid=#{impid}
  </update>

  <update id="updateSortSource">
    UPDATE ${tablename}
    SET rankfinishlikes = likes,
        rankfinishflower = flowers
    WHERE businessid = #{rankid}
    and businesstype = '2'
  </update>


</mapper>