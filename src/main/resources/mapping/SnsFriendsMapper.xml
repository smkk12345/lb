<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.longbei.appservice.dao.SnsFriendsMapper" >
  <resultMap id="BaseResultMap" type="com.longbei.appservice.entity.SnsFriends" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="userid" property="userid" jdbcType="BIGINT" />
    <result column="friendid" property="friendid" jdbcType="BIGINT" />
    <result column="remark" property="remark" jdbcType="VARCHAR" />
    <result column="ispublic" property="ispublic" jdbcType="VARCHAR" />
    <result column="isdel" property="isdel" jdbcType="CHAR" />
    <result column="updatetime" property="updatetime" jdbcType="TIMESTAMP" />
    <result column="createtime" property="createtime" jdbcType="TIMESTAMP" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, userid, friendid, remark, ispublic, createtime,isdel,updatetime
  </sql>
  <sql id="Bid_Column_List" >
    friendid
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from sns_friends
    where id = #{id,jdbcType=INTEGER}
  </select>
  
  <select id="selectListidByUid" resultType="java.lang.String">
    select 
    <include refid="Bid_Column_List" />
    from sns_friends
    where isdel = 0
      and userid = #{userid}
  </select>
  
  <select id="selectListByUid" resultMap="BaseResultMap" >
    select 
    <include refid="Base_Column_List" />
    from sns_friends
    where isdel = 0
      and userid = #{userid}
  </select>
  
  <select id="selectListByUsrid" resultMap="BaseResultMap" >
    select 
    <include refid="Base_Column_List" />
    from sns_friends
    where friendid != #{userid}
        and userid = #{userid}
        <if test="updateTime != null">
            and updateTime > #{updateTime}
        </if>
        <if test="isDel != null">
            and isdel = #{isDel}
        </if>
    group by friendid 
    <if test="startNum != null and endNum != null and endNum &gt; 0" >
      limit #{startNum},#{endNum}
    </if>
  </select>
  
  <select id="selectByUidAndFid" parameterType="Long" resultMap="BaseResultMap" >
    select 
    <include refid="Base_Column_List" />
    from sns_friends
    where userid = #{userid} and friendid=#{friendid}
    <if test="isdel != null and isdel != ''" >
      and isdel = #{isdel}
    </if>
  </select>
  
  <select id="selectFriendsCount" resultType="java.lang.Integer" >
    select count(1)
    from sns_friends
    where isdel = 0
      and userid = #{userid}
  </select>
  
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from sns_friends
    where id = #{id,jdbcType=INTEGER}
  </delete>
  
  <update id="deleteByUidAndFid" >
    update sns_friends
    set isdel = 1 ,updatetime= now()
    where userid = #{userid}
      and friendid=#{friendid}
  </update>

  <insert id="insert" parameterType="com.longbei.appservice.entity.SnsFriends" >
    insert into sns_friends (id, userid, friendid, 
      remark, ispublic, createtime,isdel,updatetime
      )
    values (#{id,jdbcType=INTEGER}, #{userid,jdbcType=BIGINT}, #{friendid,jdbcType=BIGINT}, 
      #{remark,jdbcType=VARCHAR}, #{ispublic,jdbcType=VARCHAR}, #{createtime,jdbcType=TIMESTAMP},
      #{isdel},#{updatetime}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.longbei.appservice.entity.SnsFriends" >
    insert into sns_friends
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="userid != null" >
        userid,
      </if>
      <if test="friendid != null" >
        friendid,
      </if>
      <if test="remark != null" >
        remark,
      </if>
      <if test="ispublic != null" >
        ispublic,
      </if>
      <if test="createtime != null" >
        createtime,
      </if>
      <if test="updatetime != null" >
        updatetime,
      </if>
      <if test="isdel != null" >
        isdel,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="userid != null" >
        #{userid,jdbcType=BIGINT},
      </if>
      <if test="friendid != null" >
        #{friendid,jdbcType=BIGINT},
      </if>
      <if test="remark != null" >
        #{remark,jdbcType=VARCHAR},
      </if>
      <if test="ispublic != null" >
        #{ispublic,jdbcType=VARCHAR},
      </if>
      <if test="createtime != null" >
        #{createtime,jdbcType=TIMESTAMP},
      </if>
      <if test="updatetime != null" >
        #{updatetime,jdbcType=TIMESTAMP},
      </if>
      <if test="isdel != null" >
        #{isdel,jdbcType=CHAR}
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.longbei.appservice.entity.SnsFriends" >
    update sns_friends
    <set >
      <if test="userid != null" >
        userid = #{userid,jdbcType=BIGINT},
      </if>
      <if test="friendid != null" >
        friendid = #{friendid,jdbcType=BIGINT},
      </if>
      <if test="remark != null" >
        remark = #{remark,jdbcType=VARCHAR},
      </if>
      <if test="ispublic != null" >
        ispublic = #{ispublic,jdbcType=VARCHAR},
      </if>
      <if test="createtime != null" >
        createtime = #{createtime,jdbcType=TIMESTAMP},
      </if>
      <if test="isdel != null" >
        isdel = #{isdel,jdbcType=CHAR},
      </if>
      <if test="updatetime != null" >
        updatetime = #{updatetime,jdbcType=TIMESTAMP}
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.longbei.appservice.entity.SnsFriends" >
    update sns_friends
    set userid = #{userid,jdbcType=BIGINT},
      friendid = #{friendid,jdbcType=BIGINT},
      remark = #{remark,jdbcType=VARCHAR},
      ispublic = #{ispublic,jdbcType=VARCHAR},
      createtime = #{createtime,jdbcType=TIMESTAMP},
      updatetime = #{updatetime,jdbcType=TIMESTAMP},
      isdel = #{isdel,jdbcType=CHAR},
    where id = #{id,jdbcType=INTEGER}
  </update>
  
  <update id="updateRemarkByUidAndFid">
    update sns_friends
    set remark = #{remark}
    where userid = #{userid} and friendid=#{friendid}
  </update>

  <!-- 更改好友相关信息 -->
  <update id="updateByUidAndFid" parameterType="map">
      update sns_friends
      <set>
          <if test="remark != null">
            remark = #{remark},
          </if>
        <if test="isDel != null">
            isdel = #{isDel},
        </if>
        <if test="status != null">
          status = #{status},
        </if>
        <if test="createtime != null">
          createtime = #{createtime},
        </if>
        <if test="updatetime != null">
          updatetime = #{updatetime},
        </if>
      </set>
      where userid = #{userId}
          and friendid=#{friendId}
  </update>

  <!-- 根据userid获取好友列表 -->
  <select id="selectFriendRemarkList" parameterType="map" resultMap="BaseResultMap">
      select friendid,remark
      from sns_friends
      where
        <if test="remarkIsNotNull != null">
            remark is not NULL and
        </if>
        isdel = 0 AND
        userid =#{userid}
      <if test="startNum != null">
          limit #{startNum},#{pageSize}
      </if>
  </select>

</mapper>