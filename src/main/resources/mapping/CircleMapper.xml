<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.longbei.appservice.dao.CircleMapper" >
  <resultMap id="BaseResultMap" type="com.longbei.appservice.entity.Circle" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="circleid" property="circleid" jdbcType="BIGINT" />
    <result column="circletitle" property="circletitle" jdbcType="VARCHAR" />
    <result column="circlephotos" property="circlephotos" jdbcType="VARCHAR" />
    <result column="circlebrief" property="circlebrief" jdbcType="VARCHAR" />
    <result column="circleinvoloed" property="circleinvoloed" jdbcType="INTEGER" />
    <result column="createuserid" property="createuserid" jdbcType="BIGINT" />
    <result column="createtime" property="createtime" jdbcType="TIMESTAMP" />
    <result column="updatetime" property="updatetime" jdbcType="TIMESTAMP" />
    <result column="ptype" property="ptype" jdbcType="CHAR" />
    <result column="ispublic" property="ispublic" jdbcType="CHAR" />
    <result column="needconfirm" property="needconfirm" jdbcType="CHAR" />
    <result column="notice" property="notice" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, circleid, circletitle, circlephotos, circlebrief, circleinvoloed, createuserid,
    createtime, updatetime, ptype,ispublic,needconfirm,notice
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    select 
    <include refid="Base_Column_List" />
    from circle
    where id = #{circleid,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from circle
    where circleid = #{circleid,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.longbei.appservice.entity.Circle" >
    insert into circle (circleid, circletitle, circlephotos,
      circlebrief, circleinvoloed,
      createuserid, createtime, updatetime, 
      ptype,ispublic,needconfirm,creategoup)
    values ( #{circleid,jdbcType=INTEGER}, #{circletitle,jdbcType=VARCHAR}, #{circlephotos,jdbcType=VARCHAR},
      #{circlebrief,jdbcType=VARCHAR}, #{circleinvoloed,jdbcType=INTEGER},
      #{createuserid,jdbcType=BIGINT}, #{createtime,jdbcType=TIMESTAMP}, #{updatetime,jdbcType=TIMESTAMP}, 
      #{ptype,jdbcType=CHAR},#{ispublic,jdbcType=CHAR},#{needconfirm,jdbcType=CHAR},#{creategoup,jdbcType=CHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.longbei.appservice.entity.Circle" >
    insert into circle
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="circleid != null" >
        circleid,
      </if>
      <if test="circletitle != null" >
        circletitle,
      </if>
      <if test="circlephotos != null" >
        circlephotos,
      </if>
      <if test="circlebrief != null" >
        circlebrief,
      </if>
      <if test="circleinvoloed != null" >
        circleinvoloed,
      </if>
      <if test="createuserid != null" >
        createuserid,
      </if>
      <if test="createtime != null" >
        createtime,
      </if>
      <if test="updatetime != null" >
        updatetime,
      </if>
      <if test="ptype != null" >
        ptype,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="circleid != null" >
        #{circleid,jdbcType=INTEGER},
      </if>
      <if test="circletitle != null" >
        #{circletitle,jdbcType=VARCHAR},
      </if>
      <if test="circlephotos != null" >
        #{circlephotos,jdbcType=VARCHAR},
      </if>
      <if test="circlebrief != null" >
        #{circlebrief,jdbcType=VARCHAR},
      </if>
      <if test="circleinvoloed != null" >
        #{circleinvoloed,jdbcType=INTEGER},
      </if>
      <if test="createuserid != null" >
        #{createuserid,jdbcType=BIGINT},
      </if>
      <if test="createtime != null" >
        #{createtime,jdbcType=TIMESTAMP},
      </if>
      <if test="updatetime != null" >
        #{updatetime,jdbcType=TIMESTAMP},
      </if>
      <if test="ptype != null" >
        #{ptype,jdbcType=CHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.longbei.appservice.entity.Circle" >
    update circle
    <set >
      <if test="circletitle != null" >
        circletitle = #{circletitle,jdbcType=VARCHAR},
      </if>
      <if test="circlephotos != null" >
        circlephotos = #{circlephotos,jdbcType=VARCHAR},
      </if>
      <if test="circlebrief != null" >
        circlebrief = #{circlebrief,jdbcType=VARCHAR},
      </if>
      <if test="circleinvoloed != null" >
        circleinvoloed = #{circleinvoloed,jdbcType=INTEGER},
      </if>
      <if test="createuserid != null" >
        createuserid = #{createuserid,jdbcType=BIGINT},
      </if>
      <if test="createtime != null" >
        createtime = #{createtime,jdbcType=TIMESTAMP},
      </if>
      <if test="updatetime != null" >
        updatetime = #{updatetime,jdbcType=TIMESTAMP},
      </if>
      <if test="ptype != null" >
        ptype = #{ptype,jdbcType=CHAR},
      </if>
    </set>
    where circleid = #{circleid,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.longbei.appservice.entity.Circle" >
    update circle
    set circletitle = #{circletitle,jdbcType=VARCHAR},
      circlephotos = #{circlephotos,jdbcType=VARCHAR},
      circlebrief = #{circlebrief,jdbcType=VARCHAR},
      circleinvoloed = #{circleinvoloed,jdbcType=INTEGER},
      createuserid = #{createuserid,jdbcType=BIGINT},
      createtime = #{createtime,jdbcType=TIMESTAMP},
      updatetime = #{updatetime,jdbcType=TIMESTAMP},
      ptype = #{ptype,jdbcType=CHAR}
    where circleid = #{circleid,jdbcType=INTEGER}
  </update>

  <select id="findRelevantCircle" parameterType="map" resultMap="BaseResultMap">
     select
        id,
        circlephotos,
        circletitle,
        circlebrief,
        circleinvoloed,
        createuserid
    from circle
    where circletitle like concat('%',#{circleName},'%')
    limit #{startNo},#{pageSize}
  </select>

  <!-- 根据兴趣圈名称查询兴趣圈 -->
  <select id="findCircleByCircleTitle" parameterType="string" resultType="com.longbei.appservice.entity.Circle">
      select id from circle where circleTitle = #{circleTitle}
  </select>

  <!-- 更改兴趣圈信息 -->
  <update id="updateCircleInfo" parameterType="map">
      update
          circle
      <set>
        <if test="circlebrief != null">
            circlebrief = #{circlebrief},
        </if>
        <if test="circlephotos != null">
            circlephotos = #{circlephotos},
        </if>
        <if test="notice != null">
            notice = #{notice}
        </if>
      </set>
      where createuserid = #{userId}
        and id = #{circleId}
  </update>

  <!-- 修改兴趣圈的加圈子人数 -->
  <update id="updateCircleInvoloed" parameterType="map">
     update
        circle
     set
        circleinvoloed = circleinvoloed + #{personNum}
        <if test="updateTime != null">
            ,updatetime = #{updateTime}
        </if>
     where id = #{circleId}
  </update>

</mapper>