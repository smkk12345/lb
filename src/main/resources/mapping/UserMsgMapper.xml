<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.longbei.appservice.dao.UserMsgMapper" >
  <resultMap id="BaseResultMap" type="com.longbei.appservice.entity.UserMsg" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="userid" property="userid" jdbcType="BIGINT" />
    <result column="friendid" property="friendid" jdbcType="BIGINT" />
    <result column="msgtype" property="msgtype" jdbcType="CHAR" />
    <result column="snsid" property="snsid" jdbcType="BIGINT" />
    <result column="remark" property="remark" jdbcType="VARCHAR" />
    <result column="isdel" property="isdel" jdbcType="CHAR" />
    <result column="isread" property="isread" jdbcType="CHAR" />
    <result column="gtype" property="gtype" jdbcType="CHAR" />
    <result column="mtype" property="mtype" jdbcType="CHAR" />
    <result column="num" property="num" jdbcType="INTEGER" />
    <result column="createtime" property="createtime" jdbcType="TIMESTAMP" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, userid, friendid, msgtype, snsid, remark, isdel, isread, gtype, mtype, num, createtime
  </sql>
  <sql id="Fid_Column_List" >
    friendid
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from user_msg
    where id = #{id,jdbcType=INTEGER}
  </select>
  
  <select id="selectByUserid" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from user_msg
    where userid = #{userid} 
    and mtype = 0 
    order by createtime desc 
    <if test="endNum != 0" >
      limit #{startNum},#{endNum}
    </if>
  </select>
  
  <select id="selectExceptList" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from user_msg
    where userid = #{userid} 
    and mtype = 1 
    and msgtype not in (2,5)  
    order by createtime desc 
    <if test="endNum != 0" >
      limit #{startNum},#{endNum}
    </if>
  </select>
  
  <select id="selectLikeList" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from user_msg
    where userid = #{userid} 
    and mtype = 1 
    and msgtype = #{msgtype}  
    order by createtime desc 
    <if test="endNum != 0" >
      limit #{startNum},#{endNum}
    </if>
  </select>
  
   <select id="selectIdByMsgtypeList" resultType="java.lang.String">
    select 
    <include refid="Fid_Column_List" />
    from user_msg
    where userid = #{userid} 
    and mtype = 1 
    and isread = 0 
    and msgtype = #{msgtype}  
    order by createtime desc 
  </select>
  
  <select id="selectOtherList" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from user_msg
    where userid = #{userid} 
    <if test="mtype != null" >
    	and mtype = #{mtype} 
    </if> 
    <if test="msgtype != null" >
    	and msgtype = #{msgtype}  
    </if> 
    order by isread asc 
    <if test="endNum != 0" >
      limit #{startNum},#{endNum}
    </if>
  </select>
  
  <select id="selectCountByType" resultType="int">
  	SELECT count(*) from user_msg 
  	where userid = #{userid} 
  	<if test="mtype != null" >
    	and mtype = #{mtype} 
    </if> 
    <if test="msgtype != null" >
    	and msgtype = #{msgtype}  
    </if> 
    <if test="isread != null" >
    	and isread = #{isread}
    </if> 
  </select>
  
  <select id="selectListByMtypeAndMsgtype" resultMap="BaseResultMap">
  	SELECT 
  	<include refid="Base_Column_List" />
  	 from user_msg 
  	where userid = #{userid} 
  	<if test="mtype != null" >
    	and mtype = #{mtype} 
    </if> 
    <if test="msgtype != null" >
    	and msgtype = #{msgtype}  
    </if> 
    <if test="isread != null" >
    	and isread = #{isread}
    </if> 
  </select>
  
  <delete id="deleteByMtypeAndMsgtype">
    delete from user_msg 
    where userid = #{userid} 
    <if test="mtype != null" >
    	and mtype = #{mtype} 
    </if> 
    <if test="msgtype != null" >
    	and msgtype = #{msgtype}  
    </if> 
  </delete>
  
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from user_msg
    where id = #{id,jdbcType=INTEGER}
  </delete>
  
  <delete id="deleteByUserid">
    delete from user_msg
    where userid = #{userid} 
    and mtype = #{mtype}
  </delete>
  
  <delete id="deleteByLikeUserid">
    delete from user_msg
    where userid = #{userid} 
    and mtype = 1 
    and msgtype = #{msgtype}
  </delete>
  
  
  <insert id="insert" parameterType="com.longbei.appservice.entity.UserMsg" >
    insert into user_msg (userid, friendid,
      msgtype, snsid, remark, 
      isdel, isread, gtype, mtype, num, createtime
      )
    values ( #{userid,jdbcType=BIGINT}, #{friendid,jdbcType=BIGINT},
      #{msgtype,jdbcType=CHAR}, #{snsid,jdbcType=BIGINT}, #{remark,jdbcType=VARCHAR}, 
      #{isdel,jdbcType=CHAR}, #{isread,jdbcType=CHAR}, #{gtype,jdbcType=CHAR}, #{mtype,jdbcType=CHAR}, 
      #{num,jdbcType=INTEGER}, #{createtime,jdbcType=TIMESTAMP}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.longbei.appservice.entity.UserMsg" >
    insert into user_msg
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="userid != null" >
        userid,
      </if>
      <if test="friendid != null" >
        friendid,
      </if>
      <if test="msgtype != null" >
        msgtype,
      </if>
      <if test="snsid != null" >
        snsid,
      </if>
      <if test="remark != null" >
        remark,
      </if>
      <if test="isdel != null" >
        isdel,
      </if>
      <if test="isread != null" >
        isread,
      </if>
      <if test="gtype != null" >
        gtype,
      </if>
      <if test="mtype != null" >
        mtype,
      </if>
      <if test="num != null" >
        num,
      </if>
      <if test="createtime != null" >
        createtime,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="userid != null" >
        #{userid,jdbcType=BIGINT},
      </if>
      <if test="friendid != null" >
        #{friendid,jdbcType=BIGINT},
      </if>
      <if test="msgtype != null" >
        #{msgtype,jdbcType=CHAR},
      </if>
      <if test="snsid != null" >
        #{snsid,jdbcType=BIGINT},
      </if>
      <if test="remark != null" >
        #{remark,jdbcType=VARCHAR},
      </if>
      <if test="isdel != null" >
        #{isdel,jdbcType=CHAR},
      </if>
      <if test="isread != null" >
        #{isread,jdbcType=CHAR},
      </if>
      <if test="gtype != null" >
        #{gtype,jdbcType=CHAR},
      </if>
      <if test="mtype != null" >
        #{mtype,jdbcType=CHAR},
      </if>
      <if test="num != null" >
        #{num,jdbcType=INTEGER},
      </if>
      <if test="createtime != null" >
        #{createtime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.longbei.appservice.entity.UserMsg" >
    update user_msg
    <set >
      <if test="userid != null" >
        userid = #{userid,jdbcType=BIGINT},
      </if>
      <if test="friendid != null" >
        friendid = #{friendid,jdbcType=BIGINT},
      </if>
      <if test="msgtype != null" >
        msgtype = #{msgtype,jdbcType=CHAR},
      </if>
      <if test="snsid != null" >
        snsid = #{snsid,jdbcType=BIGINT},
      </if>
      <if test="remark != null" >
        remark = #{remark,jdbcType=VARCHAR},
      </if>
      <if test="isdel != null" >
        isdel = #{isdel,jdbcType=CHAR},
      </if>
      <if test="isread != null" >
        isread = #{isread,jdbcType=CHAR},
      </if>
      <if test="gtype != null" >
        gtype = #{gtype,jdbcType=CHAR},
      </if>
      <if test="mtype != null" >
        mtype = #{mtype,jdbcType=CHAR},
      </if>
	  <if test="num != null" >
        num = #{num,jdbcType=INTEGER},
      </if>
      <if test="createtime != null" >
        createtime = #{createtime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.longbei.appservice.entity.UserMsg" >
    update user_msg
    set userid = #{userid,jdbcType=BIGINT},
      friendid = #{friendid,jdbcType=BIGINT},
      msgtype = #{msgtype,jdbcType=CHAR},
      snsid = #{snsid,jdbcType=BIGINT},
      remark = #{remark,jdbcType=VARCHAR},
      isdel = #{isdel,jdbcType=CHAR},
      isread = #{isread,jdbcType=CHAR},
      gtype = #{gtype,jdbcType=CHAR},
      mtype = #{mtype,jdbcType=CHAR},
      num = #{num,jdbcType=INTEGER},
      createtime = #{createtime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>
  
  <update id="updateIsreadByid">
    update user_msg
      isread = 1
    where id = #{id}
  </update>
  
  <update id="updateIsreadByUserid">
    update user_msg
      isread = 1 
    where userid = #{userid} 
    <if test="mtype != null" >
    	and mtype = #{mtype} 
    </if> 
    <if test="msgtype != null" >
    	and msgtype = #{msgtype}
    </if>
  </update>

  <insert id="batchInsertUserMsg" parameterType="map">
    insert into user_msg (
        <trim suffixOverrides=",">
          userid,
          <if test="userMsg.friendid != null">
            friendid,
          </if>
          <if test="userMsg.msgtype != null">
            msgtype,
          </if>
          <if test="userMsg.snsid != null">
            snsid,
          </if>
          <if test="userMsg.remark != null">
            remark,
          </if>
          <if test="userMsg.isdel != null">
            isdel,
          </if>
          <if test="userMsg.isread != null">
            isread,
          </if>
          <if test="userMsg.gtype != null">
            gtype,
          </if>
          <if test="userMsg.mtype != null">
            mtype,
          </if>
          <if test="userMsg.num != null">
            num,
          </if>
          <if test="userMsg.createtime != null">
            createtime,
          </if>
        </trim>
    )values
        <foreach collection="userIdList" item="item" separator=",">
          (<trim suffixOverrides=",">
              #{item},
              <if test="userMsg.friendid != null">
                #{userMsg.friendid},
              </if>
              <if test="userMsg.msgtype != null">
                #{userMsg.msgtype},
              </if>
              <if test="userMsg.snsid != null">
                #{userMsg.snsid},
              </if>
              <if test="userMsg.remark != null">
                #{userMsg.remark},
              </if>
              <if test="userMsg.isdel != null">
                #{userMsg.isdel},
              </if>
              <if test="userMsg.isread != null">
                #{userMsg.isread},
              </if>
              <if test="userMsg.gtype != null">
                #{userMsg.gtype},
              </if>
              <if test="userMsg.mtype != null">
                #{userMsg.mtype},
              </if>
              <if test="userMsg.num != null">
                #{userMsg.num},
              </if>
              <if test="userMsg.createtime != null">
                #{userMsg.createtime},
              </if>
            </trim>
          )
        </foreach>
  </insert>

  <!-- 查询成员加圈子的圈主验证消息 -->
  <select id="findCircleNoticeMsg" parameterType="long" resultMap="BaseResultMap">
      select
        <include refid="Base_Column_List" />
      from
          user_msg
      where
            mtype = 2
          and msgtype = 11
          and userid = #{userId}
          and snsid = #{circleId}
  </select>
</mapper>