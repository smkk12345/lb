<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.longbei.appservice.dao.ClassroomMapper" >
  <resultMap id="BaseResultMap" type="com.longbei.appservice.entity.Classroom" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="classroomid" property="classroomid" jdbcType="INTEGER" />
    <result column="classtitle" property="classtitle" jdbcType="VARCHAR" />
    <result column="classphotos" property="classphotos" jdbcType="VARCHAR" />
    <result column="classcateid" property="classcateid" jdbcType="INTEGER" />
    <result column="classinvoloed" property="classinvoloed" jdbcType="INTEGER" />
    <result column="classlimited" property="classlimited" jdbcType="INTEGER" />
    <result column="classbrief" property="classbrief" jdbcType="VARCHAR" />
    <result column="classnotice" property="classnotice" jdbcType="VARCHAR" />
    <result column="createtime" property="createtime" jdbcType="TIMESTAMP" />
    <result column="updatetime" property="updatetime" jdbcType="TIMESTAMP" />
    <result column="ptype" property="ptype" />
    <result column="ispublic" property="ispublic" jdbcType="CHAR" />
    <result column="userid" property="userid" />
    <result column="cardid" property="cardid" />
    <result column="charge" property="charge" jdbcType="INTEGER" />
    <result column="isfree" property="isfree" jdbcType="CHAR" />
    <result column="freecoursenum" property="freecoursenum" jdbcType="INTEGER" />
    <result column="classroomid" property="classroomid" jdbcType="INTEGER" />
    <result column="isdel" property="isdel" />
    <result column="sourcetype" property="sourcetype" />
    <result column="isrecommend" property="isrecommend" />
    <result column="isup" property="isup" />
    <result column="classtype" property="classtype" />
    <result column="cusername" property="cusername" />
    <result column="closedate" property="closedate" />
    <result column="closeremark" property="closeremark" />
    <result column="syllabus" property="syllabus" />
    <result column="crowd" property="crowd" />
    <result column="weight" property="weight" />
    <result column="ishomerecommend" property="ishomerecommend" />
    <result column="allcourses" property="allcourses" />
    <result column="earnings" property="earnings" />
    <result column="commission" property="commission" />
    <result column="status" property="status"/>
  </resultMap>
  <sql id="Base_Column_List" >
    id, classroomid, classtitle, classphotos, classcateid, classinvoloed, classlimited, classbrief, 
    classnotice, createtime, updatetime, ptype, classtype, ispublic, userid, cardid, 
    charge, isfree, freecoursenum, isdel, sourcetype, isrecommend, isup, cusername, 
    closedate, closeremark, syllabus, crowd, weight, ishomerecommend, allcourses, earnings, commission,status
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" >
    select 
    <include refid="Base_Column_List" />
    from classroom
    where classroomid = #{classroomid,jdbcType=INTEGER}
  </select>
  
  <select id="checkClasstitle" resultMap="BaseResultMap" >
    select 
    <include refid="Base_Column_List" />
    from classroom
    where isdel = 0 
    <if test="classtitle != null and classtitle != ''" >
      and classtitle = #{classtitle}
    </if>
  </select>
  
  <select id="selectClassroomListByIspublic" resultMap="BaseResultMap" >
    select 
    <include refid="Base_Column_List" />
    from classroom
    where isdel = 0 and allcourses != 0  
    <if test="ptype != null and ptype != ''" >
      and ptype = #{ptype}
    </if>
    <if test="isup != null and isup != ''" >
    	and isup = #{isup}
    </if>
    <if test="isrecommend != null and isrecommend != ''" >
    	and isrecommend = #{isrecommend}
    </if>
    order by weight desc, createtime desc 
    <if test="endNum != 0" >
      limit #{startNum},#{endNum}
    </if>
  </select>
  
  <select id="selectInsertByUserid" resultMap="BaseResultMap" >
    select 
    r.id, r.classroomid, r.classtitle, r.classphotos, r.classcateid, 
    r.classinvoloed, r.classlimited, r.classbrief,      
	r.classnotice, r.createtime, r.updatetime, r.ptype, r.classtype, 
	r.ispublic, r.userid, r.cardid,      
	r.charge, r.isfree, r.freecoursenum, r.isdel, r.sourcetype, 
	r.isrecommend, r.isup, r.cusername,      
	r.closedate, r.closeremark, r.syllabus, r.crowd, r.weight, 
	r.ishomerecommend, r.allcourses, r.earnings, r.commission, r.status 
    from classroom  r inner join classroom_members cm 
          on r.classroomid = cm.classroomid
      where r.isdel = 0
      	 and r.allcourses != 0 
      	 and r.isup = 1 
          and cm.itype = 0
          and cm.userid = #{userid}
      order by cm.updatetime desc
    <if test="endNum != 0" >
      limit #{startNum},#{endNum}
    </if>
  </select>
  
  <select id="selectCount" resultType="java.lang.Integer" >
    select count(*) 
    from classroom
    where 1 = 1 
    <if test="isup != null and isup != ''" >
      and isup = #{isup}
    </if>
    <if test="isdel != null and isdel != ''" >
    	and isdel = #{isdel}
    </if>
  </select>
  
  <select id="selectCountByUserid" resultType="java.lang.Integer" >
    select count(*) 
    from classroom
    where userid = #{userid} 
      and isup = 1 
      and isdel = 0
  </select>
  
  
  <select id="selectSearchCount" parameterType="com.longbei.appservice.entity.Classroom" resultType="java.lang.Integer" >
    select count(*) 
    from classroom
    where 1 = 1 
    <if test="isup != null and isup != ''" >
      and isup = #{isup}
    </if>
    <if test="isdel != null and isdel != ''" >
    	and isdel = #{isdel}
    </if>
    <if test="classtitle != null and classtitle != ''" >
    	and classtitle LIKE concat(concat('%',#{classtitle}),'%')
    </if>
    <if test="sourcetype != null and sourcetype != ''" >
    	and sourcetype = #{sourcetype}
    </if>
    <if test="ptype != null and ptype != ''" >
    	and ptype = #{ptype}
    </if>
    <if test="classtype != null and classtype != ''" >
    	and classtype = #{classtype}
    </if>
    <if test="isfree != null and isfree != ''" >
    	and isfree = #{isfree}
    </if>
    <if test="cusername != null and cusername != ''" >
    	and cusername LIKE concat(concat('%',#{cusername}),'%')
    </if>
    <if test="isrecommend != null and isrecommend != ''" >
    	and isrecommend = #{isrecommend}
    </if>
    <if test="ishomerecommend != null and ishomerecommend != ''" >
    	and ishomerecommend = #{ishomerecommend}
    </if>
    <if test="userid != null and userid != ''" >
      and userid = #{userid}
    </if>
  </select>
  
  <select id="selectSearchList" parameterType="com.longbei.appservice.entity.Classroom" resultMap="BaseResultMap" >
    select 
    <include refid="Base_Column_List" />
    from classroom
    where 1 = 1 
    <if test="classroom.isup != null and classroom.isup != ''" >
      	and isup = #{classroom.isup}
    </if>
    <if test="classroom.isdel != null and classroom.isdel != ''" >
    	and isdel = #{classroom.isdel}
    </if>
    <if test="classroom.classtitle != null and classroom.classtitle != ''" >
    	and classtitle LIKE concat(concat('%',#{classroom.classtitle}),'%')
    </if>
    <if test="classroom.sourcetype != null and classroom.sourcetype != ''" >
    	and sourcetype = #{classroom.sourcetype}
    </if>
    <if test="classroom.ptype != null and classroom.ptype != ''" >
    	and ptype = #{classroom.ptype}
    </if>
    <if test="classroom.classtype != null and classroom.classtype != ''" >
    	and classtype = #{classroom.classtype}
    </if>
    <if test="classroom.isfree != null and classroom.isfree != ''" >
    	and isfree = #{classroom.isfree}
    </if>
    <if test="classroom.cusername != null and classroom.cusername != ''" >
    	and cusername LIKE concat(concat('%',#{classroom.cusername}),'%')
    </if>
    <if test="classroom.isrecommend != null and classroom.isrecommend != ''" >
    	and isrecommend = #{classroom.isrecommend}
    </if>
    <if test="classroom.ishomerecommend != null and classroom.ishomerecommend != ''" >
    	and ishomerecommend = #{classroom.ishomerecommend}
    </if>
    <if test="classroom.userid != null and classroom.userid != ''" >
      and userid = #{classroom.userid}
    </if>
    order by weight desc, createtime desc 
    <if test="endNum != 0" >
      limit #{startNum},#{endNum}
    </if>
  </select>
  
  <select id="selectClassroomList" resultMap="BaseResultMap" >
    select 
    <include refid="Base_Column_List" />
    from classroom
    where 1 = 1 
    <if test="isup != null and isup != ''" >
      and isup = #{isup}
    </if>
    <if test="isdel != null and isdel != ''" >
    	and isdel = #{isdel}
    </if>
    order by weight desc, createtime desc 
    <if test="endNum != 0" >
      limit #{startNum},#{endNum}
    </if>
  </select>
  
  <select id="selectStatusList" resultMap="BaseResultMap" >
    select 
    <include refid="Base_Column_List" />
    from classroom
    where
    isdel = 0 and isup = 1 
    <if test="status != null and status != ''" >
      and status = #{status}
    </if>
    order createtime desc 
  </select>
  
  <select id="selectListByUserid" resultMap="BaseResultMap" >
    select 
    <include refid="Base_Column_List" />
    from classroom
    where
    isdel = 0 and isup = 1 
    <if test="userid != null and userid != ''" >
      and userid = #{userid}
    </if>
    <if test="ptype != null and ptype != ''" >
    	and ptype = #{ptype} 
    </if>
    order by weight desc, createtime desc 
    <if test="endNum != 0" >
      limit #{startNum},#{endNum}
    </if>
  </select>
  
  <select id="selectListByPtype" resultMap="BaseResultMap" >
    select 
    <include refid="Base_Column_List" />
    from classroom
    where isdel = 0 and allcourses != 0 
    <if test="keyword != null" >
    	AND (classtitle LIKE CONCAT(CONCAT('%', #{keyword}),'%'))
    	<!--  
       	or classbrief LIKE CONCAT(CONCAT('%', #{keyword}),'%')
       	or classnotice LIKE CONCAT(CONCAT('%', #{keyword}),'%') -->
    </if>
    <if test="ptype != null" >
    	and ptype = #{ptype} 
    </if>
    and isup = 1 
    order by weight desc, createtime desc 
    <if test="endNum != 0" >
      limit #{startNum},#{endNum}
    </if>
  </select>
  
  <select id="selectCountByPtype" resultType="java.lang.Integer" >
    select count(*) 
    from classroom
    where isdel = 0 and allcourses != 0 
    <if test="keyword != null" >
    	AND (classtitle LIKE CONCAT(CONCAT('%', #{keyword}),'%'))
    </if>
    <if test="ptype != null" >
    	and ptype = #{ptype} 
    </if>
    and isup = 1 
  </select>
  
  <delete id="deleteByPrimaryKey" >
    delete from classroom
    where classroomid = #{classroomid,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.longbei.appservice.entity.Classroom" >
    insert into classroom (id, classroomid, userid, classtitle, classphotos, 
      classcateid, classinvoloed, classlimited, 
      classbrief, classnotice, 
      createtime, updatetime, ptype, classtype, ispublic, charge, isfree, freecoursenum
      )
    values (#{id,jdbcType=INTEGER}, #{classroomid,jdbcType=INTEGER}, #{userid,jdbcType=INTEGER}, 
    	#{classtitle,jdbcType=VARCHAR}, 
      #{classphotos,jdbcType=VARCHAR}, 
      #{classcateid,jdbcType=INTEGER}, #{classinvoloed,jdbcType=INTEGER}, #{classlimited,jdbcType=INTEGER}, 
      #{classbrief,jdbcType=VARCHAR}, #{classnotice,jdbcType=VARCHAR}, 
      #{createtime,jdbcType=TIMESTAMP}, #{updatetime,jdbcType=TIMESTAMP}, #{ptype,jdbcType=CHAR}, #{classtype}, 
      #{ispublic,jdbcType=CHAR}, 
      #{charge,jdbcType=INTEGER}, #{isfree,jdbcType=CHAR}, #{freecoursenum,jdbcType=INTEGER}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.longbei.appservice.entity.Classroom" >
    insert into classroom
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="classroomid != null and classroomid != ''" >
        classroomid,
      </if>
      <if test="userid != null and userid != ''" >
        userid,
      </if>
      <if test="cardid != null and cardid != ''" >
        cardid,
      </if>
      <if test="classtitle != null and classtitle != ''" >
        classtitle,
      </if>
      <if test="classphotos != null and classphotos != ''" >
        classphotos,
      </if>
      <if test="classcateid != null and classcateid != ''" >
        classcateid,
      </if>
      <if test="classinvoloed != null and classinvoloed != ''" >
        classinvoloed,
      </if>
      <if test="classlimited != null and classlimited != ''" >
        classlimited,
      </if>
      <if test="classbrief != null and classbrief != ''" >
        classbrief,
      </if>
      <if test="classnotice != null and classnotice != ''" >
        classnotice,
      </if>
      <if test="createtime != null" >
        createtime,
      </if>
      <if test="updatetime != null" >
        updatetime,
      </if>
      <if test="ptype != null and ptype != ''" >
        ptype,
      </if>
      <if test="classtype != null and classtype != ''" >
        classtype,
      </if>
      <if test="ispublic != null and ispublic != ''" >
        ispublic,
      </if>
      <if test="charge != null and charge != ''" >
        charge,
      </if>
      <if test="isfree != null and isfree != ''" >
        isfree,
      </if>
      <if test="freecoursenum != null and freecoursenum != ''" >
        freecoursenum,
      </if>
      <if test="isup != null and isup != ''" >
        isup,
      </if>
      <if test="sourcetype != null and sourcetype != ''" >
        sourcetype,
      </if>
      <if test="cusername != null and cusername != ''" >
        cusername,
      </if>
      <if test="syllabus != null and syllabus != ''" >
        syllabus,
      </if>
      <if test="crowd != null and crowd != ''" >
        crowd,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="classroomid != null and classroomid != ''" >
        #{classroomid},
      </if>
      <if test="userid != null and userid != ''" >
        #{userid},
      </if>
      <if test="cardid != null and cardid != ''" >
        #{cardid},
      </if>
      <if test="classtitle != null and classtitle != ''" >
        #{classtitle},
      </if>
      <if test="classphotos != null and classphotos != ''" >
        #{classphotos},
      </if>
      <if test="classcateid != null and classcateid != ''" >
        #{classcateid},
      </if>
      <if test="classinvoloed != null and classinvoloed != ''" >
        #{classinvoloed},
      </if>
      <if test="classlimited != null and classlimited != ''" >
        #{classlimited},
      </if>
      <if test="classbrief != null and classbrief != ''" >
        #{classbrief},
      </if>
      <if test="classnotice != null and classnotice != ''" >
        #{classnotice},
      </if>
      <if test="createtime != null" >
        #{createtime},
      </if>
      <if test="updatetime != null" >
        #{updatetime},
      </if>
      <if test="ptype != null and ptype != ''" >
        #{ptype},
      </if>
      <if test="classtype != null and classtype != ''" >
        #{classtype},
      </if>
      <if test="ispublic != null and ispublic != ''" >
        #{ispublic},
      </if>
      <if test="charge != null and charge != ''" >
        #{charge},
      </if>
      <if test="isfree != null and isfree != ''" >
        #{isfree},
      </if>
      <if test="freecoursenum != null and freecoursenum != ''" >
        #{freecoursenum},
      </if>
      <if test="isup != null and isup != ''" >
        #{isup},
      </if>
      <if test="sourcetype != null and sourcetype != ''" >
        #{sourcetype},
      </if>
      <if test="cusername != null and cusername != ''" >
        #{cusername},
      </if>
      <if test="syllabus != null and syllabus != ''" >
        #{syllabus},
      </if>
      <if test="crowd != null and crowd != ''" >
        #{crowd},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.longbei.appservice.entity.Classroom" >
    update classroom
    <set >
      <if test="classtitle != null" >
        classtitle = #{classtitle,jdbcType=VARCHAR},
      </if>
      <if test="classphotos != null" >
        classphotos = #{classphotos,jdbcType=VARCHAR},
      </if>
      <if test="classcateid != null" >
        classcateid = #{classcateid,jdbcType=INTEGER},
      </if>
      <if test="classinvoloed != null" >
        classinvoloed = #{classinvoloed,jdbcType=INTEGER},
      </if>
      <if test="classlimited != null" >
        classlimited = #{classlimited,jdbcType=INTEGER},
      </if>
      <if test="classbrief != null" >
        classbrief = #{classbrief,jdbcType=VARCHAR},
      </if>
      <if test="classnotice != null" >
        classnotice = #{classnotice,jdbcType=VARCHAR},
      </if>
      <if test="createtime != null" >
        createtime = #{createtime,jdbcType=TIMESTAMP},
      </if>
      <if test="updatetime != null" >
        updatetime = #{updatetime,jdbcType=TIMESTAMP},
      </if>
      <if test="ptype != null" >
        ptype = #{ptype,jdbcType=CHAR},
      </if>
      <if test="charge != null" >
        charge = #{charge},
      </if>
      <if test="isfree != null" >
        isfree = #{isfree},
      </if>
      <if test="freecoursenum != null" >
        freecoursenum = #{freecoursenum},
      </if>
      <if test="cardid != null" >
        cardid = #{cardid},
      </if>
      <if test="ispublic != null" >
        ispublic = #{ispublic}, 
      </if>
      <if test="syllabus != null and syllabus != ''" >
        syllabus = #{syllabus}, 
      </if>
      <if test="crowd != null and crowd != ''" >
        crowd = #{crowd} 
      </if>
      <if test="commission != null and commission != ''" >
        commission = #{commission}
      </if>
    </set>
    where classroomid = #{classroomid} 
  </update>
  <update id="updateByPrimaryKey" parameterType="com.longbei.appservice.entity.Classroom" >
    update classroom
    set classtitle = #{classtitle,jdbcType=VARCHAR},
      classphotos = #{classphotos,jdbcType=VARCHAR},
      classcateid = #{classcateid,jdbcType=INTEGER},
      classinvoloed = #{classinvoloed,jdbcType=INTEGER},
      classlimited = #{classlimited,jdbcType=INTEGER},
      classbrief = #{classbrief,jdbcType=VARCHAR},
      classnotice = #{classnotice,jdbcType=VARCHAR},
      createtime = #{createtime,jdbcType=TIMESTAMP},
      updatetime = #{updatetime,jdbcType=TIMESTAMP},
      ptype = #{ptype,jdbcType=CHAR}, 
      charge = #{charge,jdbcType=INTEGER},
      isfree = #{isfree,jdbcType=CHAR},
      cardid = #{cardid},
      freecoursenum = #{freecoursenum,jdbcType=INTEGER},
      ispublic = #{ispublic,jdbcType=CHAR} 
    where classroomid = #{classroomid,jdbcType=INTEGER} 
    and userid = #{userid,jdbcType=INTEGER}
  </update>
  
  <update id="updateClassnoticeByClassroomid" >
    update classroom
    set 
      classnotice = #{classnotice},
      updatetime = #{updatetime} 
    where classroomid = #{classroomid} 
  </update>
  
  <update id="updateClassinvoloedByClassroomid" >
    update classroom
    set 
      classinvoloed = classinvoloed + #{num} 
    where classroomid = #{classroomid} 
  </update>
  
  <update id="updateAllcoursesByClassroomid" >
    update classroom
    set 
      allcourses = allcourses + #{num} 
    where classroomid = #{classroomid} 
  </update>
  
  <update id="updateEarningsByClassroomid" >
    update classroom
    set 
      earnings = earnings + #{charge} 
    where classroomid = #{classroomid} 
  </update>
  
  <update id="updateIsfreeByClassroomid" >
    update classroom
    set 
      <if test="charge != null" >
        charge = #{charge},
      </if>
      <if test="freecoursenum != null" >
        freecoursenum = #{freecoursenum},
      </if>
      isfree = #{isfree} 
    where classroomid = #{classroomid} 
  </update>
  
  <update id="updateIsdel" >
    update classroom
    set 
      <if test="closeremark != null and closeremark != ''" >
        closeremark = #{closeremark},
      </if>
      closedate = #{closedate}, 
      isdel = 2
    where classroomid = #{classroomid} 
  </update>
  
  <update id="updateIsup" >
    update classroom
    set 
      isup = 1 
    where classroomid = #{classroomid} 
  </update>
  
  <update id="updateIsrecommend" >
    update classroom
    set 
	     isrecommend = #{isrecommend},
	     weight = 0 
    where classroomid = #{classroomid} 
  </update>
  
  <update id="updateIshomerecommend" >
    update classroom
    set 
        ishomerecommend = #{ishomerecommend} 
    where classroomid = #{classroomid} 
  </update>
  
  <update id="updateRoomRecommendSort" >
    update classroom
    set 
      weight = #{weight} 
    where classroomid = #{classroomid} 
  </update>

  <update id="updateLiveStatus" >
    update classroom
    set
    status =  #{status}
    where classroomid = #{classroomid}
  </update>
  
</mapper>